// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagementSystem.Data.Context;

#nullable disable

namespace TaskManagementSystem.Migrations
{
    [DbContext(typeof(TaskManagementContext))]
    [Migration("20240719110715_FirstCreation")]
    partial class FirstCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManagementSystem.Data.RoleEntity", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Employee"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TaskAttachmentEntity", b =>
                {
                    b.Property<int>("TaskAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskAttachmentId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("TaskAttachmentId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskAttachments");

                    b.HasData(
                        new
                        {
                            TaskAttachmentId = 1,
                            FileName = "Attachment1.txt",
                            FilePath = "Desktop",
                            TaskId = 1
                        },
                        new
                        {
                            TaskAttachmentId = 2,
                            FileName = "Attachment2.jpg",
                            FilePath = "Desktop",
                            TaskId = 1
                        },
                        new
                        {
                            TaskAttachmentId = 3,
                            FileName = "Attachment3.jpg",
                            FilePath = "Desktop",
                            TaskId = 2
                        },
                        new
                        {
                            TaskAttachmentId = 4,
                            FileName = "Attachment4.jpg",
                            FilePath = "Desktop",
                            TaskId = 2
                        },
                        new
                        {
                            TaskAttachmentId = 5,
                            FileName = "Attachment5.jpg",
                            FilePath = "Desktop",
                            TaskId = 3
                        },
                        new
                        {
                            TaskAttachmentId = 6,
                            FileName = "Attachment6.jpg",
                            FilePath = "Desktop",
                            TaskId = 4
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TaskEntity", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            Description = "Develop backend",
                            DueDate = new DateTime(2024, 7, 21, 11, 7, 13, 413, DateTimeKind.Utc).AddTicks(5504),
                            EmployeeId = 2,
                            IsCompleted = false,
                            Title = "Task 1"
                        },
                        new
                        {
                            TaskId = 2,
                            Description = "Develop frontend (optional)",
                            DueDate = new DateTime(2024, 7, 22, 11, 7, 13, 413, DateTimeKind.Utc).AddTicks(5517),
                            EmployeeId = 3,
                            IsCompleted = false,
                            Title = "Task 2"
                        },
                        new
                        {
                            TaskId = 3,
                            Description = "Add Authentication",
                            DueDate = new DateTime(2024, 7, 21, 11, 7, 13, 413, DateTimeKind.Utc).AddTicks(5519),
                            EmployeeId = 2,
                            IsCompleted = false,
                            Title = "Task 1"
                        },
                        new
                        {
                            TaskId = 4,
                            Description = "Add Unit Test",
                            DueDate = new DateTime(2024, 7, 22, 11, 7, 13, 413, DateTimeKind.Utc).AddTicks(5520),
                            EmployeeId = 3,
                            IsCompleted = false,
                            Title = "Task 2"
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TaskNoteEntity", b =>
                {
                    b.Property<int>("TaskNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskNoteId"));

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("TaskNoteId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskNotes");

                    b.HasData(
                        new
                        {
                            TaskNoteId = 1,
                            Note = "Note 1 for Task 1",
                            TaskId = 1
                        },
                        new
                        {
                            TaskNoteId = 2,
                            Note = "Note 2 for Task 1",
                            TaskId = 1
                        },
                        new
                        {
                            TaskNoteId = 3,
                            Note = "Note 2 for Task 1",
                            TaskId = 2
                        },
                        new
                        {
                            TaskNoteId = 4,
                            Note = "Note 2 for Task 1",
                            TaskId = 2
                        },
                        new
                        {
                            TaskNoteId = 5,
                            Note = "Note 2 for Task 1",
                            TaskId = 3
                        },
                        new
                        {
                            TaskNoteId = 6,
                            Note = "Note 2 for Task 1",
                            TaskId = 4
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TeamEntity", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            TeamName = "Development"
                        },
                        new
                        {
                            TeamId = 2,
                            TeamName = "Marketing"
                        },
                        new
                        {
                            TeamId = 3,
                            TeamName = "Sales"
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.Data.UserEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("UserEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TaskManagementSystem.Data.AdminEntity", b =>
                {
                    b.HasBaseType("TaskManagementSystem.Data.UserEntity");

                    b.HasDiscriminator().HasValue("Admin");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            Password = ";M8ig{QV",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.Data.EmployeeEntity", b =>
                {
                    b.HasBaseType("TaskManagementSystem.Data.UserEntity");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.HasIndex("ManagerId");

                    b.HasDiscriminator().HasValue("Employee");

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            Email = "abhi.shah@gmail.com",
                            FirstName = "Abhi",
                            LastName = "Shah",
                            Password = "S{7ZA[k%",
                            RoleId = 1,
                            TeamId = 1,
                            ManagerId = 6
                        },
                        new
                        {
                            UserId = 3,
                            Email = "parth.shah@gmail.com",
                            FirstName = "Parth",
                            LastName = "Shah",
                            Password = "t;5KJKr1",
                            RoleId = 1,
                            TeamId = 1,
                            ManagerId = 6
                        },
                        new
                        {
                            UserId = 4,
                            Email = "jay.shah@gmail.com",
                            FirstName = "Jay",
                            LastName = "Shah",
                            Password = "SVRB.e_]",
                            RoleId = 1,
                            TeamId = 2,
                            ManagerId = 7
                        },
                        new
                        {
                            UserId = 5,
                            Email = "smit.shah@gmail.com",
                            FirstName = "Smit",
                            LastName = "Shah",
                            Password = "r[-A!L+!",
                            RoleId = 1,
                            TeamId = 2,
                            ManagerId = 7
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.Data.ManagerEntity", b =>
                {
                    b.HasBaseType("TaskManagementSystem.Data.UserEntity");

                    b.HasDiscriminator().HasValue("Manager");

                    b.HasData(
                        new
                        {
                            UserId = 6,
                            Email = "chiman.patel@gmail.com",
                            FirstName = "Chiman",
                            LastName = "Patel",
                            Password = "Y,WkQRp]",
                            RoleId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            UserId = 7,
                            Email = "prakash.shah@gmail.com",
                            FirstName = "Prakash",
                            LastName = "Shah",
                            Password = "]P3$SlJF",
                            RoleId = 2,
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TaskAttachmentEntity", b =>
                {
                    b.HasOne("TaskManagementSystem.Data.TaskEntity", "Task")
                        .WithMany("Attachments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TaskEntity", b =>
                {
                    b.HasOne("TaskManagementSystem.Data.EmployeeEntity", "Employee")
                        .WithMany("Tasks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TaskNoteEntity", b =>
                {
                    b.HasOne("TaskManagementSystem.Data.TaskEntity", "Task")
                        .WithMany("Notes")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.UserEntity", b =>
                {
                    b.HasOne("TaskManagementSystem.Data.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagementSystem.Data.TeamEntity", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Role");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.EmployeeEntity", b =>
                {
                    b.HasOne("TaskManagementSystem.Data.ManagerEntity", "Manager")
                        .WithMany("Employees")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TaskEntity", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.TeamEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.EmployeeEntity", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskManagementSystem.Data.ManagerEntity", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
